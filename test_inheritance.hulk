// Test script for inheritance and polymorphism in HULK

// Base type
type Animal(name) {
    name = name;
    
    speak() => "Some animal sound";
    getName() => self.name;
};

// Derived type
type Dog(name) inherits Animal(name) {
    speak() => "Woof!";
    bark() => "Bark bark!";
};

// Another derived type
type Cat(name) inherits Animal(name) {
    speak() => "Meow!";
    purr() => "Purr purr!";
};

// Test polymorphic behavior
let animal1 = new Animal("Generic Animal") in
let dog1 = new Dog("Rex") in
let cat1 = new Cat("Whiskers") in {
    print("Animal 1 says: " @ animal1.speak());
    print("Dog 1 says: " @ dog1.speak());
    print("Cat 1 says: " @ cat1.speak());
    
    // Test type checking
    print("Is dog1 a Dog? " @ (dog1 is Dog));
    print("Is dog1 an Animal? " @ (dog1 is Animal));
    print("Is cat1 a Dog? " @ (cat1 is Dog));
    
    // Test method calls
    print("Dog name: " @ dog1.getName());
    print("Cat name: " @ cat1.getName());
    
    // Test specific methods
    print("Dog bark: " @ dog1.bark());
    print("Cat purr: " @ cat1.purr());
};

// Test polymorphic function
function makeSound(animal) => animal.speak();

let animal2 = new Animal("Test Animal") in
let dog2 = new Dog("Buddy") in
let cat2 = new Cat("Fluffy") in {
    print("Polymorphic function test:");
    print("Animal sound: " @ makeSound(animal2));
    print("Dog sound: " @ makeSound(dog2));
    print("Cat sound: " @ makeSound(cat2));
}; 